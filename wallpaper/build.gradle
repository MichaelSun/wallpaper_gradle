buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1030
        versionName "3.0"
    }

    signingConfigs {
        release {
            storeFile file("jess.keystore")
            storePassword "gua495310401"
            keyAlias "jess.keystore"
            keyPassword "gua495310401"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            signingConfig android.signingConfigs.debug
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            zipAlign true
        }
    }

    lintOptions {
        abortOnError false
    }

    productFlavors {
        MeiNvWallpaper {
            packageName = 'com.michael.wallpaper'
        }

        MeiNvTianTianKan {
            packageName = 'com.michael.wallpaper.mm'
        }

        GaoQingWallpaper {
            packageName = 'com.michael.baidu.wallpaper'
        }
        
        BaidduCar {
            packageName = 'com.michael.carwall'
        } 

        GaoXiaoTianTang {
            packageName = 'com.michael.gaoxiao'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:19.0.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:+'
    compile 'com.github.chrisbanes.actionbarpulltorefresh:library:+'
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'de.greenrobot:eventbus:2.2.0'
    compile 'de.greenrobot:greendao:+'
    compile 'com.loopj.android:android-async-http:1.4.5'
    compile 'com.makeramen:roundedimageview:1.3.0'
    compile 'com.github.johnpersano:supertoasts:1.3.4@aar'
    compile 'com.github.gabrielemariotti.cards:library:1.7.3'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

android.applicationVariants.all { variant ->
    def flavor = "debug"
    if (variant.productFlavors.size() > 0) {
        flavor = variant.productFlavors[0].name
    }

    def umeng_key = ''
    def label = '@string/app_name'
    if (flavor == 'MeiNvWallpaper') {
        label = '@string/app_name_wallpaper'
    } else if (flavor == 'BaidduCar') {
        label = '@string/app_name_car'
    } else if (flavor == 'MeiNvTianTianKan') {
        label = '@string/app_name'
        umeng_key = 'android:value=\"53ca3b8356240bbd91022743\"'
    } else if (flavor == 'GaoQingWallpaper') {
        label = '@string/app_name_baiduwallpaper'
        umeng_key = 'android:value=\"53c8fede56240bcb4301601a\"'
    } else if (flavor == 'GaoXiaoTianTang') {
        label = '@string/app_name_gaoxiao'
        umeng_key = 'android:value=\"53c90dec56240bc5eb020dfc\"'
    }


    def icon = '@drawable/ic_launcher'
    if (flavor == 'MeiNvWallpaper') {
        icon = '@drawable/ic_wallpaper'
    } else if (flavor == 'BaidduCar') {
        icon = '@drawable/ic_lanucher_car'
    } else if (flavor == 'MeiNvTianTianKan') {
        icon = '@drawable/ic_launcher'
    } else if (flavor == 'GaoQingWallpaper') {
        icon = '@drawable/ic_baidu_wallpaper'
    } else if (flavor == 'GaoXiaoTianTang') {
        icon = '@drawable/icon_gaoxiao'
    }

    variant.outputFile = file("${buildDir}/apk/${flavor}-${buildType.name}-${versionName}.apk")

    variant.processResources.doFirst {
        def youmi_apikey = ''
        def youmi_seckey = ''
        def domod_pubkey = ''
        def domod_replacekey = ''
        def domod_insterkey = ''
        def wandoujia_appid = ''
        def wandoujia_seckey = ''
        def wandoujia_inster_key = ''
        if (flavor == 'MeiNvWallpaper') {
            youmi_apikey = '6142d65763827912'
            youmi_seckey = 'b398417544f954ee'
            domod_pubkey = '56OJwdKYuNBjYRcFyA'
            domod_replacekey = '16TLuqyaApjUsNUE8qiTDk5z'
            domod_insterkey = '16TLuqyaApjUsNUE8BiPMA1s'
            wandoujia_appid = '100009725'
            wandoujia_seckey = '3589aaef1332dca448f3e97c3d894ab6'
            wandoujia_inster_key = '5ae4d88378ee39098e1b81ef3b7b94cf'
        } else if (flavor == 'BaidduCar') {
            youmi_apikey = '859ff840b668c633'
            youmi_seckey = '87ed892bb7f8c34a'
            domod_pubkey = '56OJwdKYuNBxYMSZ84'
            domod_replacekey = '16TLuqyaApjpsNUE2ljOxxds'
            domod_insterkey = '16TLuqyaApjpsNUE6s-l6czz'
            wandoujia_appid = '100009749'
            wandoujia_seckey = 'eb6f5830e7a8124aff4c911b905f488c'
            wandoujia_inster_key = '254da0365c803e2d06dae6b39881f60a'
        } else if (flavor == 'MeiNvTianTianKan') {
            youmi_apikey = '9fa5ad90d57082ce'
            youmi_seckey = '375f8fffe03aa816'
            domod_pubkey = '56OJwdKYuNBG2m1Jh/'
            domod_replacekey = '16TLuqyaApjuHNU0IuYVFkls'
            domod_insterkey = '16TLuqyaApjJ1NUEK2Nkolxk'
            wandoujia_appid = '100009755'
            wandoujia_seckey = '9c1111295b595a026637b939f1a371d3'
            wandoujia_inster_key = 'b3e07d953e9b61c9693bf9275ea0199d'
        } else if (flavor == 'GaoQingWallpaper') {
            youmi_apikey = 'e58196077781ef32'
            youmi_seckey = 'a4bf9c01789b9fe6'
            domod_pubkey = '56OJwdKYuNBsUBUV3t'
            domod_replacekey = '16TLuqyaApjOANUEnJSE8aas'
            domod_insterkey = '16TLuqyaApjOANUEnLG7Cuoi'
            wandoujia_appid = '100009721'
            wandoujia_seckey = '52f13cf91cae4f3def146f4a7a1d4466'
            wandoujia_inster_key = '4dbe6be72c9f3a303ca0be2c66551901'
        } else if (flavor == 'GaoXiaoTianTang') {
            domod_pubkey = '56OJwdKYuNBdeAVfIX'
            domod_replacekey = '16TLuqyaApjD4NU0d9R1kiGi'
        }

        def file = new File("${projectDir}/src/main/java/com/michael/wallpaper/AppConfig.java");
        def text = file.getText("UTF-8")
        def src = "YOUMI_APIKEY = \".*\""
        def replace = "YOUMI_APIKEY = \"${youmi_apikey}\""
        text = text.replaceAll(src, replace)
        file.write(text, "UTF-8")

        src = "YOUMI_SECRETKEY = \".*\";"
        replace = "YOUMI_SECRETKEY = \"${youmi_seckey}\";"
        text = text.replaceAll(src, replace)
        file.write(text, "UTF-8")

        src = "DOMOD_PUBLISH_KEY = \".*\";"
        replace = "DOMOD_PUBLISH_KEY = \"${domod_pubkey}\";"
        text = text.replaceAll(src, replace)
        file.write(text, "UTF-8")

        src = "DOMOD_PLACEMENT_KEY = \".*\";"
        replace = "DOMOD_PLACEMENT_KEY = \"${domod_replacekey}\";"
        text = text.replaceAll(src, replace)
        file.write(text, "UTF-8")

        src = "DOMOD_INSTER_KEY = \".*\";"
        replace = "DOMOD_INSTER_KEY = \"${domod_insterkey}\";"
        text = text.replaceAll(src, replace)
        file.write(text, "UTF-8")

    }

    variant.processManifest.doLast {
        copy {
            from("${buildDir}/intermediates/manifests") {
                include "${variant.dirName}/AndroidManifest.xml"
            }
            into("${buildDir}/manifests/${variant.name}")

            filter {
                String line -> line.replaceAll("@string/app_name", "${label}")
            }
            filter {
                String line -> line.replaceAll("@drawable/ic_launcher", "${icon}")
            }
            filter {
                String line -> line.replaceAll("android:value=\".*\"", "${umeng_key}")
            }

            variant.processResources.manifestFile = file("${buildDir}/manifests/${variant.name}/${variant.dirName}/AndroidManifest.xml")
        }
    }
}
